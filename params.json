{"name":"Serviceconfigurator","body":"Totally configurable via an XML config file. No recompilation necessary, just edit the XML and run the exe.\r\n\r\n# Configuration\r\nThe app uses config.xml which is in the application directory. You can monitor as many services as needed. Eg:\r\nFor a service which is only deployed on the Alpha server, the config would look like this:\r\n<service name=\"My Great Service\" exepath=\"C:\\path\\to\\service.exe\">\r\n  <server name=\"Alpha\" machineName=\"alpha\"/>\r\n</service>\r\n\r\nTo monitor 3 servers, the config could look like this:\r\n\r\n    <service name=\"My Great Service\" exepath=\"C:\\path\\to\\service.exe\">\r\n      <server name=\"Localhost (Test)\" machineName=\"localhost\"/>\r\n      <server name=\"Alpha\" machineName=\"alpha\"/>\r\n      <server name=\"Omega\" machineName=\"176.192.1.1\"/>\r\n    </service>\r\n\r\nThe available options are:\r\n\r\n* *MachineName* - The host name to which to connect (not displayed)                                               \r\n* *ExePath* - The path on the server where the service is located \r\n\r\n# Usage\r\n1. Copy the service executable to it's destination on the server, Eg: Explorer (the tool doesn't do this).\r\n2. Enter the path on the server where the service was copied\r\n3. Click the Install button.\r\n4. Use the start/stop buttons to control the service\r\n\r\n# Troubleshooting\r\nIf the service fails to start, it's likely the exe path is wrong. If you have permission, it should 'just work'.","google":"","tagline":"Install, uninstall and control remote and local windows services","note":"Don't delete this file! It's used internally to help with page regeneration."}